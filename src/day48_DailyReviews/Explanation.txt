
Bu projede yeni kurulan bir banka için C++ uygulama gerçekleştirmeniz beklenmektedir. Bu bankada Kısa ve
Uzun Vadeli, Özel ve Cari hesap diye dört farklı türden hesap olmalıdır, ve her hesap türü aşağıda belirtilen
kendine ait özelliklere sahip olmalıdır.
Account sınıfı abstract olarak tanımlanmalıdır.
Bu sınıftan üretilen her nesne bir banka hesabıdır.
Bu sınıf şu fonksiyonlara sahip olmalıdır:
• deposit : hesaba para yatırılmasına yarar.
• withdraw : hesaptan para çekilmesine yarar.
Bu işlem yapılırken hesap türüne ve mevcut bakiyeye dikkat edilmelidir.
(Çekilebilecek miktar belirtilmeli, mevcut bakiyeden fazla çekilmeye çalışılırsa hata vermeli gibi
özellikler düşünülmelidir.)
• getBalance : hesabın anlık bakiyesini görüntülemeye yarar.
• getID : hesap numarasını görüntülemeye yarar. (hesap numarası sabit tam sayıdır).
• Benefit(kâr) : hesap açma günü ve işlem tarihine göre kar miktarı hesaplar.
(yıllık kar r olursa günlük kar r/365 hesaplanır).
programda 4 tür hesap için şu kurallar tanımlamalı:
ShortTerm: bu tür hesap yıllık %17 faiz verir ve en az 1000 TL hesapta bakiye olması gerekiyor.
LongTerm: bu tür hesap yıllık %24 faiz verir ve en az 1500 TL hesapta bakiye olmasi gerekiyor.
Special: bu tür hesap yıllık %12 faiz verir ve en az hesap açtığındakı kadar para hesapta bakiye
olması gerekiyor.
Current: bu hesap faizsizdir ve hesapta para olma zorunluluğu yoktur
Tüm sistemi kontrol etmesi için başka bir sınıf (Bank) tanımlanmalıdır.
Bu sınıfta Account türünden bir pointer olmalı. (Account *accounts). Bu pointer tüm hesapların adresini tutar.
Bu sınıf şu fonksiyonlara sahip olmalıdır:
• getAccount : mevcut hesapların listesini görüntülemeye yarar.
• getDate: sistemin şu anki tarihini görüntülemeye yarar.
• deposit(ID, cash): ID’si belirtilen hesaba, belirtilen miktarda para yatırma işlemi yapmaya yarar.
• Withdraw(ID, cash): eğer mümkün ise, belirtilen miktarda hesaptan para çekme işlemi yapar.
(transaction işleminin başarılı ya da başarısız olması gibi durumlar kullanıcıya bildirilir.)
• sortition: Özel hesaplar arasında çekiliş yapmaya yarar. Özel hesaplarda her 2000 tl için bir puan
tanımlanmalıdır ve çekilişler bu puanlar üzerinden yapılmalıdır. (Yüksek puana sahip olan hesabın
çıkma olasılığı yüksektir.)
o kurada çekilen hesap için 10000 TL ödül, hesabına yatırılır
ÖNEMLİ NOT: main içerisinde tek bir nesne olmalıdır ve bu nesne “Bank” sınıfından üretilmelidir.
Program kullanıcıya konsoldan aşağıdaki işlemleri yapabilmesini sağlamalıdır:
Create_S_ID_balance: Kısa vadeli hesap açar. (hesap no=ID, başlangıç parası = balance)
Create_L_ID_balance: Uzun vadeli hesap açar. (hesap no=ID, başlangıç parası = balance)
Create_O_ID_balance: Özel hesap açar. (hesap no=ID, başlangıç parası = balance)
Create_C_ID_balance: Cari hesap açar. (hesap no=ID, başlangıç parası = balance)
Increase_ID_cash: ID’ye ait hesaba “cash” kadar para ekler.
Decrease_ID_cash: ID’ye ait hesaptan “cash” kadar para çeker.
Set_dd_mm_yy: Sistemin şu anki tarihini düzenler.
ShowAccount: Tüm hesapların ID’sini ve yaptığı son 5 işlemi gösterir.
ShowIDs: Sistemdeki tüm hesap numaralarını listeler.
Sortition: Özel hesaplar için kura çeker ve sonucu gösterir.
NOT:
• Sistemin başlangiç tarihi (default) = 01.01.2020
• Sınıflara istediğiniz ek özellikleri(değişkenler ve methodlar) ekleyebilirsiniz.
• Hesap bakiyeleri tam sayı(int) olmak zorundadır